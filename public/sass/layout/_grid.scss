.row {
    // by convention, widths of float grids are 1140px. Max-width will specify a max-width for the grid. Anything less and the grid
    // will completely fill what space is available to it.
    max-width: $grid-width;
    // trick to center a block element inside of another block element
    margin: 0 auto;
    // not means we select everything but the element we pass into the function - here we select everything but the last child element
    // in this case we dont want to have the bottom margin on the final row of the grid because its pointless and will interfere if something
    // comes after it
    &:not(:last-child) {
        // space between the rows
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    // Attribute selector allows you to select an element by one of its attributes. e.g images with an src="images/hero.jpg"
    // it would select all the elements that have that exact attribute
    // Here it selects all elements where their class attribute begins with "col-" the "^" means starting with
    [class^="col-"] {
        
        // of course since we are using a float layout we float the columns to the left
        float: left;

        // We then make the gutter visible by adding it to the right margin of every column but the last.
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        // we calculate the width of the column using the calc function. The width of this column is quite simple. We take the max-width
        // subtract the horizontal gutter between them and then divide it by 2 so that we get two even columns
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
    }

    .col-2-of-3 {
        // the width of the 2-of-3 is two column lengths plus one gutter length. We already have the length of one column from the 
        // 1 of 3 so we can just extrapolate from there. same principle applies for the other intermediate columns
        width: calc(2* (100% - (2 * #{$gutter-horizontal})) / 3 + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * (100% - (3 * #{$gutter-horizontal})) / 4 + #{$gutter-horizontal} );
    }

    .col-3-of-4 {
        width: calc(3 * (100% - (3 * #{$gutter-horizontal})) / 4 + (2 * #{$gutter-horizontal}) );
    }
}
